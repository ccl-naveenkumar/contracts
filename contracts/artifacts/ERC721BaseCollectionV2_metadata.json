{
	"compiler": {
		"version": "0.7.6+commit.7338295f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "_itemId",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "string",
								"name": "rarity",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "maxSupply",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalSupply",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "beneficiary",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "metadata",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "contentHash",
								"type": "string"
							}
						],
						"indexed": false,
						"internalType": "struct ERC721BaseCollectionV2.Item",
						"name": "_item",
						"type": "tuple"
					}
				],
				"name": "AddItem",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "approved",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "ApprovalForAll",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "_oldBaseURI",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "_newBaseURI",
						"type": "string"
					}
				],
				"name": "BaseURI",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "Complete",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_previousCreator",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_newCreator",
						"type": "address"
					}
				],
				"name": "CreatorshipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_beneficiary",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "_itemId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_issuedId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_caller",
						"type": "address"
					}
				],
				"name": "Issue",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "_itemId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "_contentHash",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "_metadata",
						"type": "string"
					}
				],
				"name": "RescueItem",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bool",
						"name": "_previousValue",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "_newValue",
						"type": "bool"
					}
				],
				"name": "SetApproved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bool",
						"name": "_previousValue",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "_newValue",
						"type": "bool"
					}
				],
				"name": "SetEditable",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_manager",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "_value",
						"type": "bool"
					}
				],
				"name": "SetGlobalManager",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_minter",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "_value",
						"type": "bool"
					}
				],
				"name": "SetGlobalMinter",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "_itemId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_manager",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "_value",
						"type": "bool"
					}
				],
				"name": "SetItemManager",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "_itemId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_minter",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					}
				],
				"name": "SetItemMinter",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "_itemId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_price",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_beneficiary",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "_metadata",
						"type": "string"
					}
				],
				"name": "UpdateItemData",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "COLLECTION_HASH",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ISSUED_ID_BITS",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ITEM_ID_BITS",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MAX_ISSUED_ID",
				"outputs": [
					{
						"internalType": "uint216",
						"name": "",
						"type": "uint216"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MAX_ITEM_ID",
				"outputs": [
					{
						"internalType": "uint40",
						"name": "",
						"type": "uint40"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "rarity",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "beneficiary",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "metadata",
								"type": "string"
							}
						],
						"internalType": "struct ERC721BaseCollectionV2.ItemParam[]",
						"name": "_items",
						"type": "tuple[]"
					}
				],
				"name": "addItems",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "baseURI",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "_tokenIds",
						"type": "uint256[]"
					}
				],
				"name": "batchTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "completeCollection",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "createdAt",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "creator",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "decodeTokenId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "itemId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "issuedId",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "_itemIds",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "_prices",
						"type": "uint256[]"
					},
					{
						"internalType": "address[]",
						"name": "_beneficiaries",
						"type": "address[]"
					},
					{
						"internalType": "string[]",
						"name": "_metadatas",
						"type": "string[]"
					}
				],
				"name": "editItemsData",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_itemId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_issuedId",
						"type": "uint256"
					}
				],
				"name": "encodeTokenId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "getApproved",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "globalManagers",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "globalMinters",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "initImplementation",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_symbol",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_baseURI",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "_creator",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_shouldComplete",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "_isApproved",
						"type": "bool"
					},
					{
						"internalType": "contract IRarities",
						"name": "_rarities",
						"type": "address"
					},
					{
						"components": [
							{
								"internalType": "string",
								"name": "rarity",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "beneficiary",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "metadata",
								"type": "string"
							}
						],
						"internalType": "struct ERC721BaseCollectionV2.ItemParam[]",
						"name": "_items",
						"type": "tuple[]"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isApproved",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					}
				],
				"name": "isApprovedForAll",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isCompleted",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isEditable",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isInitialized",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isMintingAllowed",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_beneficiaries",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "_itemIds",
						"type": "uint256[]"
					}
				],
				"name": "issueTokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "itemManagers",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "itemMinters",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "items",
				"outputs": [
					{
						"internalType": "string",
						"name": "rarity",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "maxSupply",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalSupply",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "beneficiary",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "metadata",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "contentHash",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "itemsCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "ownerOf",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "rarities",
				"outputs": [
					{
						"internalType": "contract IRarities",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "_itemIds",
						"type": "uint256[]"
					},
					{
						"internalType": "string[]",
						"name": "_contentHashes",
						"type": "string[]"
					},
					{
						"internalType": "string[]",
						"name": "_metadatas",
						"type": "string[]"
					}
				],
				"name": "rescueItems",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "_tokenIds",
						"type": "uint256[]"
					},
					{
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "safeBatchTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "setApprovalForAll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_value",
						"type": "bool"
					}
				],
				"name": "setApproved",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_baseURI",
						"type": "string"
					}
				],
				"name": "setBaseURI",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_value",
						"type": "bool"
					}
				],
				"name": "setEditable",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "_itemIds",
						"type": "uint256[]"
					},
					{
						"internalType": "address[]",
						"name": "_managers",
						"type": "address[]"
					},
					{
						"internalType": "bool[]",
						"name": "_values",
						"type": "bool[]"
					}
				],
				"name": "setItemsManagers",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "_itemIds",
						"type": "uint256[]"
					},
					{
						"internalType": "address[]",
						"name": "_minters",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "_values",
						"type": "uint256[]"
					}
				],
				"name": "setItemsMinters",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_managers",
						"type": "address[]"
					},
					{
						"internalType": "bool[]",
						"name": "_values",
						"type": "bool[]"
					}
				],
				"name": "setManagers",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_minters",
						"type": "address[]"
					},
					{
						"internalType": "bool[]",
						"name": "_values",
						"type": "bool[]"
					}
				],
				"name": "setMinters",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "tokenByIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "tokenOfOwnerByIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "tokenURI",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newCreator",
						"type": "address"
					}
				],
				"name": "transferCreatorship",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addItems((string,uint256,address,string)[])": {
					"params": {
						"_items": "- items to add"
					}
				},
				"approve(address,uint256)": {
					"details": "See {IERC721-approve}."
				},
				"balanceOf(address)": {
					"details": "See {IERC721-balanceOf}."
				},
				"baseURI()": {
					"details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
				},
				"batchTransferFrom(address,address,uint256[])": {
					"params": {
						"_from": "current owner of the token",
						"_to": "address to receive the ownership of the given token ID",
						"_tokenIds": "uint256 ID of the token to be transferred"
					}
				},
				"completeCollection()": {
					"details": "Disable forever the possibility of adding new items in the collection. The issuance is still allowed."
				},
				"decodeTokenId(uint256)": {
					"details": "itemId (`itemIdBits` bits) + issuedId (`issuedIdBits` bits)",
					"params": {
						"_id": "- token id"
					},
					"returns": {
						"issuedId": "uint256 of the issued id",
						"itemId": "uint256 of the item id"
					}
				},
				"editItemsData(uint256[],uint256[],address[],string[])": {
					"params": {
						"_beneficiaries": "- new beneficiaries",
						"_itemIds": "- items ids to edit",
						"_prices": "- new prices"
					}
				},
				"encodeTokenId(uint256,uint256)": {
					"details": "itemId (`itemIdBits` bits) + issuedId (`issuedIdBits` bits)",
					"params": {
						"_issuedId": "- issued id",
						"_itemId": "- item id"
					},
					"returns": {
						"id": "uint256 of the encoded id"
					}
				},
				"getApproved(uint256)": {
					"details": "See {IERC721-getApproved}."
				},
				"initialize(string,string,string,address,bool,bool,address,(string,uint256,address,string)[])": {
					"params": {
						"_baseURI": "- base URI for token URIs",
						"_creator": "- creator address",
						"_isApproved": "- Whether the collection should be approved by the end of this call",
						"_items": "- items to be added",
						"_name": "- name of the contract",
						"_rarities": "- rarities address",
						"_shouldComplete": "- Whether the collection should be completed by the end of this call",
						"_symbol": "- symbol of the contract"
					}
				},
				"isApprovedForAll(address,address)": {
					"details": "See {IERC721-isApprovedForAll}."
				},
				"isMintingAllowed()": {
					"returns": {
						"_0": "boolean whether minting is allowed or not"
					}
				},
				"issueTokens(address[],uint256[])": {
					"details": "Will throw if the items have reached its maximum or is invalid",
					"params": {
						"_beneficiaries": "- owner of the tokens",
						"_itemIds": "- item ids"
					}
				},
				"itemsCount()": {
					"returns": {
						"_0": "Amount of items in the collection"
					}
				},
				"name()": {
					"details": "See {IERC721Metadata-name}."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"ownerOf(uint256)": {
					"details": "See {IERC721-ownerOf}."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"rescueItems(uint256[],string[],string[])": {
					"details": "Only the owner can rescue an item. This function should be used to resolve a dispute or fix a broken metadata or hashContent item",
					"params": {
						"_contentHashes": "- New items content hash",
						"_itemIds": "- Item ids to be fixed",
						"_metadatas": "- New items metadata"
					}
				},
				"safeBatchTransferFrom(address,address,uint256[],bytes)": {
					"params": {
						"_data": "bytes data to send along with a safe transfer check",
						"_from": "- current owner of the token",
						"_to": "- address to receive the ownership of the given token ID",
						"_tokenIds": "- uint256 ID of the tokens to be transferred"
					}
				},
				"safeTransferFrom(address,address,uint256)": {
					"details": "See {IERC721-safeTransferFrom}."
				},
				"safeTransferFrom(address,address,uint256,bytes)": {
					"details": "See {IERC721-safeTransferFrom}."
				},
				"setApprovalForAll(address,bool)": {
					"details": "See {IERC721-setApprovalForAll}."
				},
				"setBaseURI(string)": {
					"params": {
						"_baseURI": "- base URI for token URIs"
					}
				},
				"setEditable(bool)": {
					"details": "This property is used off-chain to check whether the items of the collection can be updated or not",
					"params": {
						"_value": "- Value to set"
					}
				},
				"setItemsManagers(uint256[],address[],bool[])": {
					"params": {
						"_itemIds": "- item ids to set managers",
						"_managers": "- Addresses allowed to manage items",
						"_values": "- Whether is allowed or not"
					}
				},
				"setItemsMinters(uint256[],address[],uint256[])": {
					"params": {
						"_itemIds": "- item ids",
						"_minters": "- minter addresses",
						"_values": "- values array"
					}
				},
				"setManagers(address[],bool[])": {
					"params": {
						"_managers": "- Address allowed to manage items",
						"_values": "- Whether is allowed or not"
					}
				},
				"setMinters(address[],bool[])": {
					"params": {
						"_minters": "- minter addresses",
						"_values": "- values array"
					}
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
				},
				"symbol()": {
					"details": "See {IERC721Metadata-symbol}."
				},
				"tokenByIndex(uint256)": {
					"details": "See {IERC721Enumerable-tokenByIndex}."
				},
				"tokenOfOwnerByIndex(address,uint256)": {
					"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
				},
				"tokenURI(uint256)": {
					"params": {
						"_tokenId": "- uint256 ID of the token queried"
					},
					"returns": {
						"_0": "token URI"
					}
				},
				"totalSupply()": {
					"details": "See {IERC721Enumerable-totalSupply}."
				},
				"transferCreatorship(address)": {
					"details": "Forced owner to check against msg.sender always"
				},
				"transferFrom(address,address,uint256)": {
					"details": "See {IERC721-transferFrom}."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"addItems((string,uint256,address,string)[])": {
					"notice": "Add items to the collection."
				},
				"batchTransferFrom(address,address,uint256[])": {
					"notice": "Transfers the ownership of given tokens ID to another address. Usage of this method is discouraged, use {safeBatchTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator."
				},
				"completeCollection()": {
					"notice": "Complete the collection."
				},
				"decodeTokenId(uint256)": {
					"notice": "Decode token id"
				},
				"editItemsData(uint256[],uint256[],address[],string[])": {
					"notice": "Edit items"
				},
				"encodeTokenId(uint256,uint256)": {
					"notice": "Encode token id"
				},
				"initImplementation()": {
					"notice": "Init the contract"
				},
				"initialize(string,string,string,address,bool,bool,address,(string,uint256,address,string)[])": {
					"notice": "Create the contract"
				},
				"isMintingAllowed()": {
					"notice": "Get whether minting is allowed"
				},
				"issueTokens(address[],uint256[])": {
					"notice": "Issue tokens by item ids."
				},
				"itemsCount()": {
					"notice": "Returns the amount of item in the collection"
				},
				"rescueItems(uint256[],string[],string[])": {
					"notice": "Rescue an item by providing new metadata and/or content hash"
				},
				"safeBatchTransferFrom(address,address,uint256[],bytes)": {
					"notice": "Safely transfers the ownership of given token IDs to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator"
				},
				"setApproved(bool)": {
					"notice": "Approve a collection"
				},
				"setBaseURI(string)": {
					"notice": "Set Base URI"
				},
				"setEditable(bool)": {
					"notice": "Set whether the collection can be editable or not."
				},
				"setItemsManagers(uint256[],address[],bool[])": {
					"notice": "Set allowed account to manage items."
				},
				"setItemsMinters(uint256[],address[],uint256[])": {
					"notice": "Set allowed account to mint items."
				},
				"setManagers(address[],bool[])": {
					"notice": "Set allowed account to manage items."
				},
				"setMinters(address[],bool[])": {
					"notice": "Set allowed account to manage items."
				},
				"tokenURI(uint256)": {
					"notice": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string."
				},
				"transferCreatorship(address)": {
					"notice": "Transfers ownership of the contract to a new account (`newOwner`)."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"wearables-contracts/contracts/ERC721CollectionV2.sol": "ERC721BaseCollectionV2"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"wearables-contracts/contracts/ERC721CollectionV2.sol": {
			"keccak256": "0x050ec39c632d32913a62e7cebdfb2f73d6f41c26f859b6e90dafc1f6f0c6f473",
			"license": "MIT",
			"urls": [
				"bzz-raw://85fb67f11de4f10bac205ca5ef032c898665bdc13a1f68ea23968ed2c0626d19",
				"dweb:/ipfs/QmSZ7Nuzp7PWHVQX3XE1p9NY47Cbp9NLzs5cPfLWuHtqU6"
			]
		}
	},
	"version": 1
}